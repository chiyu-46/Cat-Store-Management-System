@using Microsoft.EntityFrameworkCore
@using CatStore.Models
@using CatStore.Data
@implements IAsyncDisposable
@inject IDbContextFactory<CatStoreContext> DbFactory
@inject ISnackbar Snackbar

<EditForm Model="@catInfo" OnValidSubmit="AddCatInfo" FormName="create-cat" Enhance>
    <DataAnnotationsValidator/>
    <MudDialog>
        <TitleContent>
            <MudText>
                <MudIcon Icon="@Icons.Material.Outlined.Add" Class="mr-3 mb-n1"/>
                添加新猫咪
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField Label="名字" HelperText="最少两个字"
                          @bind-Value="catInfo.Name" For="@(() => catInfo.Name)"/>
            <MudSelect @bind-Value="catInfo.Gender" For="@(() => catInfo.Gender)" Label="性别">
                <MudSelectItem Value="true">@CatInfo.ConvertGenderToNaturalLanguage(true)</MudSelectItem>
                <MudSelectItem Value="false">@CatInfo.ConvertGenderToNaturalLanguage(false)</MudSelectItem>
            </MudSelect>
            <MudSelect @bind-Value="catInfo.CatBreed" For="@(() => catInfo.CatBreed)" Label="品种">
                @foreach (CatBreed item in Enum.GetValues(typeof(CatBreed)))
                {
                    <MudSelectItem Value="@item">@CatInfo.ConvertCatBreedToNaturalLanguage(item)</MudSelectItem>
                }
            </MudSelect>
            <MudDatePicker @bind-Date="catInfo.BirthdayWithTime" Label="出生日" MaxDate="DateTime.Now" Required
                           RequiredError="必须指定出生日！"
                           Validation="@(new Func<DateTime?, IEnumerable<string>>(CatInfo.ValidateBirthday))"/>
            <MudSelect @bind-Value="catInfo.CatState" For="@(() => catInfo.CatState)" Label="状态"
                       ReadOnly="true" HelperText="只能通过订单管理修改此信息">
                @foreach (CatState item in Enum.GetValues(typeof(CatState)))
                {
                    <MudSelectItem Value="@item">@CatInfo.ConvertCatStateToNaturalLanguage(item)</MudSelectItem>
                }
            </MudSelect>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">取消</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Success">添加</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    private CatStoreContext dbContext = default!;

    // 代表表单中的数据
    private CatInfo catInfo = new CatInfo(){Birthday = DateOnly.FromDateTime(DateTime.Now)};

    protected override void OnInitialized()
    {
        dbContext = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await dbContext.DisposeAsync();


    private void Cancel() => MudDialog.Cancel();

    /// <summary>
    /// 添加猫咪信息到数据库，显示结果信息，并关闭本对话框。
    /// </summary>
    private async Task AddCatInfo()
    {
        dbContext.CatInfo.Add(catInfo);
        await dbContext.SaveChangesAsync();
        Snackbar.Add("新猫咪添加成功！", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

}