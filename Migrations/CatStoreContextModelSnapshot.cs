// <auto-generated />
using System;
using CatStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatStore.Migrations
{
    [DbContext(typeof(CatStoreContext))]
    partial class CatStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CatStore.Models.CatInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<int>("CatBreed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatState")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CatInfo");
                });

            modelBuilder.Entity("CatStore.Models.CatOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CatInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("CatInfoId");

                    b.ToTable("CatOrder");
                });

            modelBuilder.Entity("CatStore.Models.Commodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("CommodityType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Commodity");
                });

            modelBuilder.Entity("CatStore.Models.CommodityOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("CommodityOrder");
                });

            modelBuilder.Entity("CatStore.Models.OrderItemBase", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CommodityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("CatStore.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SupplierPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TransactionTime")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("CatStore.Models.OrderItem", b =>
                {
                    b.HasBaseType("CatStore.Models.OrderItemBase");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CommodityId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("CatStore.Models.PurchaseOrderItem", b =>
                {
                    b.HasBaseType("CatStore.Models.OrderItemBase");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CommodityId");

                    b.HasIndex("OrderId");

                    b.ToTable("PurchaseOrderItem");
                });

            modelBuilder.Entity("CatStore.Models.CatOrder", b =>
                {
                    b.HasOne("CatStore.Models.CatInfo", "CatInfo")
                        .WithMany("CatOrders")
                        .HasForeignKey("CatInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatInfo");
                });

            modelBuilder.Entity("CatStore.Models.OrderItem", b =>
                {
                    b.HasOne("CatStore.Models.Commodity", "Commodity")
                        .WithMany("OrderItems")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatStore.Models.CommodityOrder", "CommodityOrder")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("CommodityOrder");
                });

            modelBuilder.Entity("CatStore.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("CatStore.Models.Commodity", "Commodity")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatStore.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("CatStore.Models.CatInfo", b =>
                {
                    b.Navigation("CatOrders");
                });

            modelBuilder.Entity("CatStore.Models.Commodity", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("CatStore.Models.CommodityOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("CatStore.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
